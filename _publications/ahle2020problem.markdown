---
layout: publication
title: On The Problem Of p_1^-1 In Locality-sensitive Hashing
authors: Ahle Thomas Dybdahl
conference: "Arxiv"
year: 2020
bibkey: ahle2020problem
additional_links:
  - {name: "Paper", url: "https://arxiv.org/abs/2005.12065"}
tags: ['ARXIV', 'Independent', 'LSH']
---
A Locality-Sensitive Hash (LSH) function is called \{&#37; raw &#37;\}\\((r,cr,p\_1,p\_2)\\)\{&#37; endraw &#37;\}-sensitive, if two data-points with a distance less than \{&#37; raw &#37;\}\\(r\\)\{&#37; endraw &#37;\} collide with probability at least \{&#37; raw &#37;\}\\(p\_1\\)\{&#37; endraw &#37;\} while data points with a distance greater than \{&#37; raw &#37;\}\\(cr\\)\{&#37; endraw &#37;\} collide with probability at most \{&#37; raw &#37;\}\\(p\_2\\)\{&#37; endraw &#37;\}. These functions form the basis of the successful Indyk-Motwani algorithm (STOC 1998) for nearest neighbour problems. In particular one may build a \{&#37; raw &#37;\}\\(c\\)\{&#37; endraw &#37;\}-approximate nearest neighbour data structure with query time \{&#37; raw &#37;\}\\(\tilde O(n^\rho/p\_1)\\)\{&#37; endraw &#37;\} where \{&#37; raw &#37;\}\\(\rho=\frac\{\log1/p\_1\}\{\log1/p\_2\}\in(0,1)\\)\{&#37; endraw &#37;\}. That is, sub-linear time, as long as \{&#37; raw &#37;\}\\(p\_1\\)\{&#37; endraw &#37;\} is not too small. This is significant since most high dimensional nearest neighbour problems suffer from the curse of dimensionality, and can't be solved exact, faster than a brute force linear-time scan of the database. Unfortunately, the best LSH functions tend to have very low collision probabilities, \{&#37; raw &#37;\}\\(p\_1\\)\{&#37; endraw &#37;\} and \{&#37; raw &#37;\}\\(p\_2\\)\{&#37; endraw &#37;\}. Including the best functions for Cosine and Jaccard Similarity. This means that the \{&#37; raw &#37;\}\\(n^\rho/p\_1\\)\{&#37; endraw &#37;\} query time of LSH is often not sub-linear after all, even for approximate nearest neighbours! In this paper, we improve the general Indyk-Motwani algorithm to reduce the query time of LSH to \{&#37; raw &#37;\}\\(\tilde O(n^\rho/p\_1^\{1-\rho\})\\)\{&#37; endraw &#37;\} (and the space usage correspondingly.) Since \{&#37; raw &#37;\}\\(n^\rho p\_1^\{\rho-1\} < n \Leftrightarrow p\_1 > n^\{-1\}\\)\{&#37; endraw &#37;\}, our algorithm always obtains sublinear query time, for any collision probabilities at least \{&#37; raw &#37;\}\\(1/n\\)\{&#37; endraw &#37;\}. For \{&#37; raw &#37;\}\\(p\_1\\)\{&#37; endraw &#37;\} and \{&#37; raw &#37;\}\\(p\_2\\)\{&#37; endraw &#37;\} small enough, our improvement over all previous methods can be \emph\{up to a factor \{&#37; raw &#37;\}\\(n\\)\{&#37; endraw &#37;\}\} in both query time and space. The improvement comes from a simple change to the Indyk-Motwani algorithm, which can easily be implemented in existing software packages.
