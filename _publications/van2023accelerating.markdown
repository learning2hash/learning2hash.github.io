---
layout: publication
title: Accelerating Java Ray Tracing Applications On Heterogeneous Hardware
authors: Vinh Pham van, Juan Fumero, Athanasios Stratikopoulos, Florin Blanaru, Christos
  Kotselidis
conference: Arxiv
year: 2023
bibkey: van2023accelerating
citations: 0
additional_links: [{name: Paper, url: 'https://arxiv.org/abs/2305.07450'}]
tags: ["Efficiency"]
short_authors: van et al.
---
Ray tracing has been typically known as a graphics rendering method capable
of producing highly realistic imagery and visual effects generated by
computers. More recently the performance improvements in Graphics Processing
Units (GPUs) have enabled developers to exploit sufficient computing power to
build a fair amount of ray tracing applications with the ability to run in
real-time. Typically, real-time ray tracing is achieved by utilizing high
performance kernels written in CUDA, OpenCL, and Vulkan which can be invoked by
high-level languages via native bindings; a technique that fragments
application code bases as well as limits portability.
  This paper presents a hardware-accelerated ray tracing rendering engine,
fully written in Java, that can seamlessly harness the performance of
underlying GPUs via the TornadoVM framework. Through this paper, we show the
potential of Java and acceleration frameworks to process in real time a compute
intensive application. Our results indicate that it is possible to enable real
time ray tracing from Java by achieving up to 234, 152, 45 frames-per-second in
720p, 1080p, and 4K resolutions, respectively.