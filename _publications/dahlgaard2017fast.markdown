---
layout: publication
title: Fast Similarity Sketching
authors: Dahlgaard Søren, Langhede Mathias Bæk Tejs, Houen Jakob Bæk Tejs, Thorup Mikkel
conference: "Arxiv"
year: 2017
bibkey: dahlgaard2017fast
additional_links:
  - {name: "Paper", url: "https://arxiv.org/abs/1704.04370"}
tags: ['ARXIV', 'Supervised']
---
We consider the \{&#37; raw &#37;\}\\(\textit\{Similarity Sketching\}\\)\{&#37; endraw &#37;\} problem: Given a universe \{&#37; raw &#37;\}\\([u] = \\{0,\ldots, u-1\\}\\)\{&#37; endraw &#37;\} we want a random function \{&#37; raw &#37;\}\\(S\\)\{&#37; endraw &#37;\} mapping subsets \{&#37; raw &#37;\}\\(A\subseteq [u]\\)\{&#37; endraw &#37;\} into vectors \{&#37; raw &#37;\}\\(S(A)\\)\{&#37; endraw &#37;\} of size \{&#37; raw &#37;\}\\(t\\)\{&#37; endraw &#37;\}, such that the Jaccard similarity \{&#37; raw &#37;\}\\(J(A,B) = |A\cap B|/|A\cup B|\\)\{&#37; endraw &#37;\} between sets \{&#37; raw &#37;\}\\(A\\)\{&#37; endraw &#37;\} and \{&#37; raw &#37;\}\\(B\\)\{&#37; endraw &#37;\} is preserved. More precisely, define $X\_i = [S(A)[i] = S(B)[i]]\{&#37; raw &#37;\}\\( and \\)\{&#37; endraw &#37;\}X = \sum\_\{i\in [t]\} X\_i\{&#37; raw &#37;\}\\(. We want \\)\{&#37; endraw &#37;\}E[X\_i]=J(A,B)$, and we want \{&#37; raw &#37;\}\\(X\\)\{&#37; endraw &#37;\} to be strongly concentrated around \{&#37; raw &#37;\}\\(E[X] = t \cdot J(A,B)\\)\{&#37; endraw &#37;\} (i.e. Chernoff-style bounds). This is a fundamental problem which has found numerous applications in data mining, large-scale classification, computer vision, similarity search, etc. via the classic MinHash algorithm. The vectors \{&#37; raw &#37;\}\\(S(A)\\)\{&#37; endraw &#37;\} are also called \{&#37; raw &#37;\}\\(\textit\{sketches\}\\)\{&#37; endraw &#37;\}. Strong concentration is critical, for often we want to sketch many sets \{&#37; raw &#37;\}\\(B\_1,\ldots,B\_n\\)\{&#37; endraw &#37;\} so that we later, for a query set \{&#37; raw &#37;\}\\(A\\)\{&#37; endraw &#37;\}, can find (one of) the most similar \{&#37; raw &#37;\}\\(B\_i\\)\{&#37; endraw &#37;\}. It is then critical that no \{&#37; raw &#37;\}\\(B\_i\\)\{&#37; endraw &#37;\} looks much more similar to \{&#37; raw &#37;\}\\(A\\)\{&#37; endraw &#37;\} due to errors in the sketch. The seminal \{&#37; raw &#37;\}\\(t\times\textit\{MinHash\}\\)\{&#37; endraw &#37;\} algorithm uses \{&#37; raw &#37;\}\\(t\\)\{&#37; endraw &#37;\} random hash functions \{&#37; raw &#37;\}\\(h\_1,\ldots, h\_t\\)\{&#37; endraw &#37;\}, and stores $\left ( \min\_\{a\in A\} h\_1(A),\ldots, \min\_\{a\in A\} h\_t(A) \right )\{&#37; raw &#37;\}\\( as the sketch of \\)\{&#37; endraw &#37;\}A$. The main drawback of MinHash is, however, its \{&#37; raw &#37;\}\\(O(t\cdot |A|)\\)\{&#37; endraw &#37;\} running time, and finding a sketch with similar properties and faster running time has been the subject of several papers. (continued...)
